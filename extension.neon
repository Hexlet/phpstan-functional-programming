parametersSchema:
  phpstanFunctionalProgramming: structure([
    disallowClasses: bool()
    disallowLoops: bool()
    disallowThrow: bool()
    disallowUnusedExpression: bool()
  ])

parameters:
  phpstanFunctionalProgramming:
    disallowClasses: true
    disallowLoops: true
    disallowThrow: true
    disallowUnusedExpression: true

services:
  -
    class: Hexlet\PHPStanFp\Rules\Classes\DisallowClassesRule
    tags:
      - phpstan.rules.rule
    arguments:
      disallowClasses: %phpstanFunctionalProgramming.disallowClasses%
  -
    class: Hexlet\PHPStanFp\Rules\Loops\WhileRule
    tags:
      - phpstan.rules.rule
    arguments:
      disallowLoops: %phpstanFunctionalProgramming.disallowLoops%
  -
    class: Hexlet\PHPStanFp\Rules\Loops\DoWhileRule
    tags:
      - phpstan.rules.rule
    arguments:
      disallowLoops: %phpstanFunctionalProgramming.disallowLoops%
  -
    class: Hexlet\PHPStanFp\Rules\Loops\ForRule
    tags:
      - phpstan.rules.rule
    arguments:
      disallowLoops: %phpstanFunctionalProgramming.disallowLoops%
  -
    class: Hexlet\PHPStanFp\Rules\Loops\ForeachRule
    tags:
      - phpstan.rules.rule
    arguments:
      disallowLoops: %phpstanFunctionalProgramming.disallowLoops%
  -
    class: Hexlet\PHPStanFp\Rules\Exceptions\DisallowThrowRule
    tags:
      - phpstan.rules.rule
    arguments:
      disallowThrow: %phpstanFunctionalProgramming.disallowThrow%
  -
    class: Hexlet\PHPStanFp\Rules\Expression\DisallowUnusedExpressionRule
    tags:
      - phpstan.rules.rule
    arguments:
      disallowUnusedExpression: %phpstanFunctionalProgramming.disallowUnusedExpression%
